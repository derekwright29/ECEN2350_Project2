
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Project2_top(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire clk_out;
			 

//	reg [2:0] currState,nextState;
//	assign LED[8:6] = currState; //display state on LEDs
//	reg [1:0] buttons;
//	wire clk_50MHZ;
//	assign clk_50MHZ = MAX10_CLK1_50;
//	wire clk_1kHz;
//	
//	reg [9:0] ReacTime;
//	reg [20:0] HEX_out;



//=======================================================
//  Structural coding
//=======================================================

//	
//	 //Button sate control
//   always @(posedge KEY[1])
//     begin
//	buttons[1] = ~buttons[1];
//     end
//   always @(posedge KEY[0])
//     begin
//		buttons[0] = ~buttons[0];
//     end
//	  
//	 detState stateMachine(buttons, clk_50MHZ,SW[9]);
//	 clk_divider(clk_50MHZ, clk_1kHZ);
//	 
//	 always @ (currState)
//		begin
//			if (currState == COUNTING) begin
//				timer Counter(clk_1kHZ, ReacTime);
//		end
//		
//		dispTime BCD(ReacTime, HEX_out);
//		
//		assign HEX0 = HEX_out[7:0];

   wire LFSR_ready, LFSR_en,delay_over;
   reg [9:0] LFSR_out;
   initial
     begin
	LFSR_out = 10'b1000101101;
     end

   always @(posedge LFSR_en)
     begin
	generate
	   while(!LFSR_ready)
	     begin
		LFSR get_delay0(LFSR_en, LFSR_out, LFSR_ready);
	     end
	   endgenerate
     end
   
Counter wait_delay(LFSR_out, delay_over)		

	 clock_div test1(MAX10_CLK1_50, clk_out);
	 defparam test1.n = 25000000;
	 assign LEDR[0] = clk_out;
	 

	 endmodule



